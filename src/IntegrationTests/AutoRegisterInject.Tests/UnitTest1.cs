using Microsoft.CodeAnalysis.Testing;
using Xunit;

using GeneratorTest = Microsoft.CodeAnalysis.CSharp.Testing.CSharpSourceGeneratorTest<AutoRegisterInject.Tests.SourceGeneratorAdapter<AutoRegisterInject.Generator>, Microsoft.CodeAnalysis.Testing.Verifiers.XUnitVerifier>;

namespace AutoRegisterInject.Tests
{
    public class UnitTest1
    {
        [Fact]
        public async Task ShouldGenerateCode()
        {
            const string ATTRIBUTE_SOURCE_OUTPUT = @"// <auto-generated>
//     Automatically generated by AutoRegisterInject.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>
namespace AutoRegisterInject
{
    [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
    internal sealed class RegisterScopedAttribute : System.Attribute { }
    [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
    internal sealed class RegisterSingletonAttribute : System.Attribute { }
    [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
    internal sealed class RegisterTransientAttribute : System.Attribute { }
}";

            const string SOURCE_INPUT = @"[RegisterScoped]
public partial class PartialClassTest { }

public partial class PartialClassTest { }

[RegisterTransient, RegisterSingleton, RegisterScoped]
public class MultipleRegisterTest { }

[RegisterScoped]
public class ScopedTest { }

[RegisterSingleton]
public class SingletonTest { }

[RegisterTransient]
public class TransientTest { }

public interface IInterfaceTest { }

[RegisterScoped]
public class InterfaceTest : IInterfaceTest { }

public interface IMultiInterfaceTest { }

[RegisterScoped]
public class MultiInterfaceTest : IInterfaceTest, IMultiInterfaceTest { }
";

            const string REGISTRATION_SOURCE_OUTPT = @"// <auto-generated>
//     Automatically generated by AutoRegisterInject.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>
namespace AutoRegisterInject
{
    using Microsoft.Extensions.DependencyInjection;
    public static class AutoRegisterInjectServiceCollectionExtension
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegisterFromTestProject(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            return AutoRegister(serviceCollection);
        }

        internal static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegister(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
        {
            
            return serviceCollection;
        }
    }
}";

            await new GeneratorTest
            {
                ReferenceAssemblies = ReferenceAssemblies.Net.Net60,
                TestState =
                {
                    Sources = { SOURCE_INPUT },
                    GeneratedSources =
                    {
                        (typeof(SourceGeneratorAdapter<Generator>), "AutoRegisterInject.Attributes.g.cs", ATTRIBUTE_SOURCE_OUTPUT),
                        (typeof(SourceGeneratorAdapter<Generator>), "AutoRegisterInject.ServiceCollectionExtension.g.cs", REGISTRATION_SOURCE_OUTPT),
                    },
                },
            }.RunAsync();
        }
    }
}